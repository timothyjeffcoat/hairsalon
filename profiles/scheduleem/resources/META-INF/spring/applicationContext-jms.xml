<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:amq="http://activemq.apache.org/schema/core" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd                http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd   http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">
   <!-- Embedded ActiveMQ Broker JMX MBean server enabled by default, access via: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi -->
 	<amq:broker persistent="false" useJmx="true">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:61616"/>
        </amq:transportConnectors>
    </amq:broker>
    <!-- JMS ConnectionFactory to use for ActiveMQ, configuring the embedded broker using XML -->
    <amq:connectionFactory brokerURL="vm://localhost" id="jmsFactory"/>
    
    <bean class="com.scheduleem.shop.web.AppointmentsNotificationHelper" id="appointmentNotificationHelper">
        <property name="jmsTemplate" ref="jmsTemplate"/>    
    </bean>
    <bean class="com.scheduleem.shop.web.RegistrationNotificationHelper" id="registrationNotificationHelper">
        <property name="jmsTemplate" ref="jmsTemplateRegistration"/>    
    </bean>
    <bean class="com.scheduleem.shop.web.GeneralNotificationHelper" id="generalNotificationHelper">
        <property name="jmsTemplate" ref="jmsTemplateGeneral"/>    
    </bean>
    <bean class="com.scheduleem.shop.web.GCalNotificationHelper" id="gcalNotificationHelper">
        <property name="jmsTemplate" ref="jmsTemplateGCal"/>    
    </bean>
    
    <!-- JMS ConnectionFactory to use for Spring JMS template -->
    <bean class="org.springframework.jms.connection.CachingConnectionFactory" id="cachingConnectionFactory">
        <property name="targetConnectionFactory">
            <ref local="jmsFactory"/>
        </property>
    </bean>
    <!-- Spring JMS Template -->
    <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplate">
        <!-- lets wrap in a pool to avoid creating a connection per send -->
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestination" ref="jms.queue.AppointmentsNotificationListQueue"/>
    </bean>
    <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplateRegistration">
        <!-- lets wrap in a pool to avoid creating a connection per send -->
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestination" ref="jms.queue.RegistrationNotificationListQueue"/>
    </bean>
    <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplateGeneral">
        <!-- lets wrap in a pool to avoid creating a connection per send -->
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestination" ref="jms.queue.GeneralNotificationListQueue"/>
    </bean>
    <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplateGCal">
        <!-- lets wrap in a pool to avoid creating a connection per send -->
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestination" ref="jms.queue.GCalNotificationListQueue"/>
    </bean>
    <amq:queue id="jms.queue.AppointmentsNotificationListQueue" physicalName="jms.queue.AppointmentsNotificationListQueue"/>
    <amq:queue id="jms.queue.RegistrationNotificationListQueue" physicalName="jms.queue.RegistrationNotificationListQueue"/>
    <amq:queue id="jms.queue.GeneralNotificationListQueue" physicalName="jms.queue.GeneralNotificationListQueue"/>
    <amq:queue id="jms.queue.GCalNotificationListQueue" physicalName="jms.queue.GCalNotificationListQueue"/>
    
    <jms:listener-container connection-factory="jmsFactory" destination-type="queue"/>
    
	<jms:listener-container connection-factory="jmsFactory" destination-type="queue">
        <jms:listener destination="jms.queue.AppointmentsNotificationListQueue" method="onMessage" ref="jmsAppointmentsNotificationListQueueListener"/>
    </jms:listener-container>
	<jms:listener-container connection-factory="jmsFactory" destination-type="queue">
        <jms:listener destination="jms.queue.RegistrationNotificationListQueue" method="onMessage" ref="jmsRegistrationNotificationListQueueListener"/>
    </jms:listener-container>
	<jms:listener-container connection-factory="jmsFactory" destination-type="queue">
        <jms:listener destination="jms.queue.GeneralNotificationListQueue" method="onMessage" ref="jmsGeneralNotificationListQueueListener"/>
    </jms:listener-container>
	<jms:listener-container connection-factory="jmsFactory" destination-type="queue">
        <jms:listener destination="jms.queue.GCalNotificationListQueue" method="onMessage" ref="jmsGCalNotificationListQueueListener"/>
    </jms:listener-container>

    <bean class="com.scheduleem.shop.messaging.JmsAppointmentsNotificationListQueueListener" id="jmsAppointmentsNotificationListQueueListener"/>
    <bean class="com.scheduleem.shop.messaging.JmsRegistrationNotificationListQueueListener" id="jmsRegistrationNotificationListQueueListener"/>
    <bean class="com.scheduleem.shop.messaging.JmsGeneralNotificationListQueueListener" id="jmsGeneralNotificationListQueueListener"/>
    <bean class="com.scheduleem.shop.messaging.JmsGCalNotificationListQueueListener" id="jmsGCalNotificationListQueueListener"/>
	
    
</beans>